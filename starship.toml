add_newline = false

format = """
[](234)\
$username\
[ ](bg:234)\
$directory\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
[](234)\
$fill\
[ ](inverted 234)\
[$status\
$docker_context\
$custom\
$c\
$elixir\
$elm\
$golang\
$haskell\
$java\
$kotlin\
$julia\
$nodejs\
$nim\
$rust\
$time](bg:234)\
[ ](234)\
\n\
$character\
"""

# You can also replace your username with a neat symbol like  to save some space
[username]
show_always = false
style_user = "bg:234"
style_root = "bg:234"
format = "[$path ]($style)"

[directory]
style = "bg:234 fg:39 bold"
truncate_to_repo = true
read_only = ""
read_only_style = "bg:234 fg:31"
format = "[$path]($style)"
truncation_length = 5
truncation_symbol = "… /"
fish_style_pwd_dir_length = 2
repo_root_style = "bg:234 fg:76 bold"
repo_root_format = "[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style)"
# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
#[directory.substitutions]
#"Documents" = " "
#"Downloads" = " "
#"Music" = " "
#"Pictures" = " "
# Keep in mind that the order matters. For example:
# "Important Documents" = "  "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important  " = "  "

[c]
symbol = " "
style = "bg:234"
format = '[$symbol ($version) ]($style)'

[docker_context]
symbol = " "
style = "bg:234"
format = '[$symbol$context $path]($style)[╱ ](bg:234 fg:242)'

[elixir]
symbol = " "
style = "bg:234"
format = '[$symbol ($version) ]($style)'

[elm]
symbol = " "
style = "bg:234"
format = '[$symbol ($version) ]($style)'

[git_branch]
symbol = ""
style = "bg:234 fg:76"
format = '[ ╱](bg:234 fg:242)[ $symbol $branch ]($style)'

[git_status]
style = "bg:234"
stashed = "[*$count ](fg:178 bg:234)"
conflicted = "[~($count) ](fg:red bg:234)"
staged = "[+($count) ](fg:178 bg:234)"
modified = "[!($count) ](fg:178 bg:234)"
untracked = "[?($count) ](fg:39 bg:234)"
deleted = "[✘($count) ](fg:red bg:234)"
ahead = "⇡($count) "
behind = "⇣($count) "
diverged = "⇕ "
format = '[[$ahead_behind[$all_status](bg:234)](bg:234 fg:76)]($style)'
#format = '([\[$all_status$ahead_behind\]]($style) )'

[golang]
symbol = " "
style = "bg:234"
format = '[$symbol ($version) ]($style)'

[haskell]
symbol = " "
style = "bg:234"
format = '[$symbol ($version) ]($style)'

[java]
symbol = " "
style = "bg:234"
format = '[$symbol ($version) ]($style)'

[kotlin]
symbol = "🅺"
style = "bg:234"
format = '[$symbol ($version) ]($style)'

[julia]
symbol = " "
style = "bg:234"
format = '[$symbol ($version) ]($style)'

[nodejs]
symbol = ""
style = "bg:234"
format = '[$symbol ($version) ]($style)'

[python]
symbol = ""
pyenv_version_name = true
style = "39 bold bg:234"
format = '[$symbol ($version) ]($style)'

[nim]
symbol = " "
style = "bg:234"
format = '[[ $symbol ($version) ](bg:#86BBD8) ]($style)'

[rust]
symbol = ""
style = "bg:234"
format = '[$symbol ($version) ]($style)'

[time]
disabled = false
time_format = "%T" # Hour:Minute Format
style = "bg:234"
format = '[$time ]($style)'

[status]
format = '[$symbol $common_meaning$signal_name$maybe_int ]($style)'
style = 'red bold bg:234'
disabled = false
map_symbol = true
not_executable_symbol = ''
sigint_symbol = ''
not_found_symbol = ''
recognize_signal_code = true

[git_metrics]
disabled = true

[fill]
symbol = " "
